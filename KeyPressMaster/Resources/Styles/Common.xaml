<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:KeyPressMaster.View.Controls">


    <Style TargetType="Rectangle">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>


    <Style x:Key="ButtonBase" TargetType="control:ExtendButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="control:ExtendButton">
                    <Grid x:Name="MainGrid">
                        <Border x:Name="Inactive" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Label x:Name="LabelInactive"  Content="{TemplateBinding Content}" 
                                                       FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"
                                                       FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}"/>
                                <Grid x:Name="SeparationInactive" Width="{TemplateBinding Separation}"/>
                                <Rectangle x:Name="IconInactive" Fill="{TemplateBinding IconColor}" Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IconSource}" Stretch="Uniform"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </StackPanel>
                        </Border>
                        <Border x:Name="Active" Background="{TemplateBinding BackgroundHover}" CornerRadius="{TemplateBinding CornerRadius}" Opacity="0">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Label x:Name="LabelActive"  Content="{TemplateBinding Content}" 
                                                       FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"
                                                       FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding ForegroundHover}"/>
                                <Grid x:Name="SeparationActive" Width="{TemplateBinding Separation}"/>
                                <Rectangle x:Name="IconActive" Fill="{TemplateBinding IconColorHover}" Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IconSource}" Stretch="Uniform"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="LabelInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="LabelActive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationActive" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="LabelInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="LabelActive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationActive" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IconSource" Value="{x:Null}">
                            <Setter TargetName="IconInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationInactive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconActive" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SeparationActive" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Disabled" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MainGrid" Property="Opacity" Value=".5"/>
                            <Setter TargetName="MainGrid" Property="IsHitTestVisible" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainGrid" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="control:ExtendButton.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Inactive" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Active" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="control:ExtendButton.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Inactive" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="Active" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonIcon" TargetType="control:ExtendButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource ButtonIcon.Background.Default}"/>
        <Setter Property="BackgroundHover" Value="{DynamicResource ButtonIcon.Background.Active}"/>
        <Setter Property="IconColor" Value="{DynamicResource ButtonIcon.Foreground.Default}"/>
        <Setter Property="IconColorHover" Value="{DynamicResource ButtonIcon.Foreground.Active}"/>
        <Setter Property="IconSize" Value="17"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="IconSource" Value="pack://application:,,,/Assets/img_failed.png"/>
    </Style>

    <Style TargetType="control:ExtendButton" BasedOn="{StaticResource ButtonBase}"/>

    <Style x:Key="CheckBoxBase" TargetType="CheckBox">
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border Width="{TemplateBinding Width}" Background="{DynamicResource CheckBox.Fill.Default}" Height="{TemplateBinding Height}" CornerRadius="16" >
                        <Grid>
                            <Border x:Name="Border" CornerRadius="14" Background="{DynamicResource CheckBox.Fill.Active}" Opacity="0"/>
                            <Border x:Name="BorderHover" Background="black" Opacity="0" CornerRadius="14"/>
                            <Border Padding="4">
                                <Ellipse x:Name="Ellipse" Fill="{DynamicResource CheckBox.Bar}" Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" HorizontalAlignment="Left"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Margin" To="28,0,0,0">
                                            <ThicknessAnimation.EasingFunction>
                                                <PowerEase Power="6" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0:0:0.2" Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="Margin" To="0,0,0,0">
                                            <ThicknessAnimation.EasingFunction>
                                                <PowerEase Power="6" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="CheckBox.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHover"
                                                                         Storyboard.TargetProperty="Opacity" To=".2" Duration="0:0:0.1">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="CheckBox.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="BorderHover"
                                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBase}"/>

    <Style x:Key="ThemeRadioButton" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Width="35" Height="35" ClipToBounds="False">
                        <Ellipse Fill="{TemplateBinding Background}"/>
                        <Ellipse x:Name="EllipseHover" Fill="black" Opacity="0"/>
                        <Border x:Name="Ellipse" Margin="-5" CornerRadius="100" BorderThickness="3" BorderBrush="{DynamicResource Modal}"  Background="{TemplateBinding Background}"
                                                    Opacity="0" Width="24" Height="24" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="3">
                            <control:Icon Source="pack://application:,,,/Assets/check.png" Fill="{DynamicResource Modal}"/>
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0.5" ScaleY="0.5"/>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Ellipse"
                                                                             Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                                             Storyboard.TargetProperty="ScaleX"
                                                                             To="1" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" 
                                                                             Storyboard.TargetProperty="ScaleY"
                                                                             To="1" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Ellipse"
                                                                             Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                                             Storyboard.TargetProperty="ScaleX"
                                                                             To=".5" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform" 
                                                                             Storyboard.TargetProperty="ScaleY"
                                                                             To=".5" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="RadioButton.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="EllipseHover"
                                                                         Storyboard.TargetProperty="Opacity" To=".1" Duration="0:0:0">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="RadioButton.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="EllipseHover"
                                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
</ResourceDictionary>